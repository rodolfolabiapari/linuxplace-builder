#!/bin/bash
#===============================================================================
#
#          FILE: assumerole.sh
#
#         USAGE: ./assumerole.sh set
#
#   DESCRIPTION:  deployer
#
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: Rodolfo, rodolfo.mansur@linuxplace.com.br
#  ORGANIZATION: Linuxplace
#       CREATED: 01/05/2020 21:56
#      REVISION:  ---
#===============================================================================

set -o nounset                              # Treat unset variables as an error


function set_configuration(){
	ROLEBASE=$1
	VAR_AWS_ACCESS_KEY_ID=$2
	VAR_AWS_SECRET_ACCESS_KEY=$3
	AWS_CONFIG=$4

	# Criando o diretorio de arquivos de config do AWSCLI
	mkdir -p ~/.aws/

	touch ~/.aws/config
	touch ~/.aws/credentials

	cat "$AWS_CONFIG" >> ~/.aws/config

	aws --profile ${ROLEBASE} configure set aws_access_key_id $VAR_AWS_ACCESS_KEY_ID
	aws --profile ${ROLEBASE} configure set aws_secret_access_key $VAR_AWS_SECRET_ACCESS_KEY

}

function dispHelp(){
cat <<EOF
$0 command [params]

commands:
  set -c <role_base> -a <access_key> -s <secret_key> -p <config_profile>

 -h help
EOF
}

echo ${*}
#### comandos
if [ $# -lt 1 ] ; then
  dispHelp
  exit 1
fi


VERB=$1
#shift
#while getopts r:c:a:s:p:h OPCAO; do
#     case "${OPCAO}" in
#        #i) IMAGENAME="${OPTARG}" ;;
#        c) COMMIT="${OPTARG}" ;;
#        a) VAR_AWS_ACCESS_KEY_ID="${OPTARG}" ;;
#        s) VAR_AWS_SECRET_ACCESS_KEY="${OPTARG}" ;;
#        p) AWS_CONFIG="${OPTARG}" ;;
#        h) dispHelp; exit ;;
#     esac
#done


case "$VERB" in
  set)
  set_configuration $ROLEBASE $VAR_AWS_ACCESS_KEY_ID $VAR_AWS_SECRET_ACCESS_KEY $AWS_CONFIG
  ;;
  *)
  echo "Comando invalido $VERB"
  exit 1
  ;;
esac
